/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JanPessoa.java
 *
 * Created on May 7, 2009, 4:21:25 PM
 */
package br.tche.ucpel.doo1.view;

import br.tche.ucpel.doo1.bean.Cidade;
import br.tche.ucpel.doo1.bean.Estado;
import br.tche.ucpel.doo1.bean.Pessoa;
import br.tche.ucpel.doo1.dao.EstadoDAO;
import br.tche.ucpel.doo1.dao.PessoaDAO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author mertins
 */
public class JanPessoa extends javax.swing.JFrame {

    /** Creates new form JanPessoa */
    public JanPessoa() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgGrupoSexo = new javax.swing.ButtonGroup();
        btgSelecao = new javax.swing.ButtonGroup();
        jToolBar1 = new javax.swing.JToolBar();
        btLimpar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        rdMasculino = new javax.swing.JRadioButton();
        rdFeminino = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmbCidade = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        txtData = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbListaPessoa = new javax.swing.JTable();
        bttCodigo = new javax.swing.JToggleButton();
        bttNome = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        bttCidade = new javax.swing.JToggleButton();
        bttSexo = new javax.swing.JToggleButton();
        bttDtNascimento = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnSobre = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        mnSair = new javax.swing.JMenuItem();
        mnLookAndFeel = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Exemplo de Collections");
        setIconImage(new ImageIcon(JanPessoa.class.getResource("/br/tche/ucpel/doo1/imagens/ucpel.png")).getImage());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/tche/ucpel/doo1/imagens/novo.png"))); // NOI18N
        btLimpar.setText("Limpar");
        btLimpar.setFocusable(false);
        btLimpar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btLimpar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });
        jToolBar1.add(btLimpar);

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/tche/ucpel/doo1/imagens/salvar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("Verifica os campos informados e salva no sistema");
        btSalvar.setFocusable(false);
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btSalvar);

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/tche/ucpel/doo1/imagens/excluir.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setToolTipText("Remove do sistema o código selecionado");
        btExcluir.setFocusable(false);
        btExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btExcluir);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Sexo"));

        btgGrupoSexo.add(rdMasculino);
        rdMasculino.setSelected(true);
        rdMasculino.setText("Masculino");
        rdMasculino.setToolTipText("Sexo da Pessoa");

        btgGrupoSexo.add(rdFeminino);
        rdFeminino.setText("Feminino");
        rdFeminino.setToolTipText("Sexo da Pessoa");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdMasculino)
                    .addComponent(rdFeminino))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(rdMasculino)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdFeminino)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));

        jLabel5.setLabelFor(cmbCidade);
        jLabel5.setText("Cidade");

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Rio de Janeiro", "Rio Grande do Sul", "São Paulo" }));
        cmbEstado.setToolTipText("Estado onde a pessoa reside");
        cmbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEstadoActionPerformed(evt);
            }
        });

        jLabel4.setLabelFor(cmbEstado);
        jLabel4.setText("Estado");

        cmbCidade.setToolTipText("Cidade onde a pessoa reside");
        cmbCidade.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(cmbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(cmbCidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dt Nascimento"));

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.setToolTipText("Data de Nascimento registrada na Certidão de Nascimento");
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtData)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações Gerais"));

        jLabel1.setLabelFor(txtCodigo);
        jLabel1.setText("Código");

        txtCodigo.setToolTipText("Código de identificação único");
        txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoFocusLost(evt);
            }
        });

        jLabel2.setLabelFor(txtNome);
        jLabel2.setText("Nome");

        txtNome.setToolTipText("Nome completo");
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("CPF");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome)
                    .addComponent(jLabel2))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleção"));

        tbListaPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "Data de Nascimento", "Cidade", "Sexo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbListaPessoa.setToolTipText("<html>Dois clicks selecionam o item para edição");
        tbListaPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListaPessoaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbListaPessoa);
        tbListaPessoa.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbListaPessoa.getColumnModel().getColumnCount() > 0) {
            tbListaPessoa.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbListaPessoa.getColumnModel().getColumn(2).setPreferredWidth(80);
            tbListaPessoa.getColumnModel().getColumn(3).setPreferredWidth(60);
            tbListaPessoa.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        btgSelecao.add(bttCodigo);
        bttCodigo.setSelected(true);
        bttCodigo.setText("Código");
        bttCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttOrdemActionPerformed(evt);
            }
        });

        btgSelecao.add(bttNome);
        bttNome.setText("Nome");
        bttNome.setMaximumSize(new java.awt.Dimension(61, 29));
        bttNome.setMinimumSize(new java.awt.Dimension(61, 29));
        bttNome.setPreferredSize(new java.awt.Dimension(61, 29));
        bttNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttOrdemActionPerformed(evt);
            }
        });

        jLabel3.setText("Ordem de Apresentação");

        btgSelecao.add(bttCidade);
        bttCidade.setText("Cidade");
        bttCidade.setMaximumSize(new java.awt.Dimension(61, 29));
        bttCidade.setMinimumSize(new java.awt.Dimension(61, 29));
        bttCidade.setPreferredSize(new java.awt.Dimension(61, 29));
        bttCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttOrdemActionPerformed(evt);
            }
        });

        btgSelecao.add(bttSexo);
        bttSexo.setText("Sexo");
        bttSexo.setMaximumSize(new java.awt.Dimension(61, 29));
        bttSexo.setMinimumSize(new java.awt.Dimension(61, 29));
        bttSexo.setPreferredSize(new java.awt.Dimension(61, 29));
        bttSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttOrdemActionPerformed(evt);
            }
        });

        btgSelecao.add(bttDtNascimento);
        bttDtNascimento.setText("Dt Nascimento");
        bttDtNascimento.setMaximumSize(new java.awt.Dimension(61, 29));
        bttDtNascimento.setMinimumSize(new java.awt.Dimension(61, 29));
        bttDtNascimento.setPreferredSize(new java.awt.Dimension(61, 29));
        bttDtNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttOrdemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttNome, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttDtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bttCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttDtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenu1.setMnemonic('A');
        jMenu1.setText("Arquivo");

        mnSobre.setText("Sobre");
        mnSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSobreActionPerformed(evt);
            }
        });
        jMenu1.add(mnSobre);
        jMenu1.add(jSeparator2);

        mnSair.setMnemonic('S');
        mnSair.setText("Sair");
        mnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSairActionPerformed(evt);
            }
        });
        jMenu1.add(mnSair);

        jMenuBar1.add(jMenu1);

        mnLookAndFeel.setMnemonic('L');
        mnLookAndFeel.setText("Look and Feel");
        jMenuBar1.add(mnLookAndFeel);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(716, 505));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        final JFrame frame=this;
        Set estados = EstadoDAO.encontraTodos();
        DefaultComboBoxModel dcb = new DefaultComboBoxModel(estados.toArray());
        dcb.insertElementAt("", 0);
        dcb.setSelectedItem(null);
        this.cmbEstado.setModel(dcb);
        LookAndFeelInfo[] listaLook = UIManager.getInstalledLookAndFeels();
        for (LookAndFeelInfo look : listaLook) {
            JMenuItem mn = new JMenuItem(look.getName());
            mn.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    JMenuItem mnSelecionado = (JMenuItem) evt.getSource();
                    LookAndFeelInfo[] looksDisponiveis = UIManager.getInstalledLookAndFeels();
                    for (LookAndFeelInfo look : looksDisponiveis) {
                        if (mnSelecionado.getText().equals(look.getName())){
                            try {
                                UIManager.setLookAndFeel(look.getClassName());
                                SwingUtilities.updateComponentTreeUI(frame);
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(JanPessoa.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (InstantiationException ex) {
                                Logger.getLogger(JanPessoa.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (IllegalAccessException ex) {
                                Logger.getLogger(JanPessoa.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (UnsupportedLookAndFeelException ex) {
                                Logger.getLogger(JanPessoa.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            });
            this.mnLookAndFeel.add(mn);
        }
    }//GEN-LAST:event_formWindowOpened

    private void cmbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEstadoActionPerformed
        // TODO add your handling code here:

        if (this.cmbEstado.getSelectedIndex() > 0) {
            Estado est = (Estado) this.cmbEstado.getModel().getSelectedItem();
            DefaultComboBoxModel dcb = new DefaultComboBoxModel(est.getCidades().toArray());
            dcb.insertElementAt("", 0);
            dcb.setSelectedItem(null);
            this.cmbCidade.setModel(dcb);
            this.cmbCidade.setEnabled(true);
        } else {
            this.cmbCidade.setModel(new DefaultComboBoxModel());
            this.cmbCidade.setEnabled(false);
        }

    }//GEN-LAST:event_cmbEstadoActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        // TODO add your handling code here:
        this.limpaForm();
    }//GEN-LAST:event_btLimparActionPerformed

    private void mnSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSobreActionPerformed
        // TODO add your handling code here:
        JDialog sobre = new JanSobre(this, true);
        sobre.setVisible(true);
    }//GEN-LAST:event_mnSobreActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        if (this.valida()) {
            Pessoa pessoa = new Pessoa();
            pessoa.setCodigo(Integer.parseInt(this.txtCodigo.getText().trim()));
            pessoa.setNome(this.txtNome.getText().trim());
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                pessoa.setDataNascimento(sdf.parse(this.txtData.getText()));
            } catch (ParseException ex) {
            }
            if (this.rdMasculino.isSelected()) {
                pessoa.setSexo('M');
            } else {
                pessoa.setSexo('F');
            }
            pessoa.setCidade((Cidade) this.cmbCidade.getSelectedItem());
            
            //ADD CPF//
            pessoa.setCpf(this.txtCPF.getText());
            
            PessoaDAO dao = new PessoaDAO();
            String msg = "Registro salvo";
            if (this.txtCodigo.isEnabled()) {
                dao.insere(pessoa);

            } else {
                dao.atualiza(pessoa);
                msg = "Registro atualizado";
            }
            this.atualizaTable();
            JOptionPane.showMessageDialog(this, msg, "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.limpaForm();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoFocusLost
        // TODO add your handling code here:
        try {
            int codigo = Integer.parseInt(this.txtCodigo.getText().trim());
            PessoaDAO dao = new PessoaDAO();
            Pessoa pessoa = dao.encontraPorCodigo(codigo);
            this.carregaForm(pessoa);
        } catch (Exception ex) {
            //Se for NullPointerExeception ou NumberFormatException não faz nada
        }

    }//GEN-LAST:event_txtCodigoFocusLost

    private void tbListaPessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListaPessoaMouseClicked
        // TODO add your handling code here:
        System.out.println("Método tbListaPessoaMouseClicked chamado");
        if (evt.getSource() instanceof JTableHeader) {
            JTableHeader header = (JTableHeader) evt.getSource();
            JTable table = header.getTable();
            TableColumnModel colModel = table.getColumnModel();
            int columnIndex = colModel.getColumnIndexAtX(evt.getX());

            // Faça algo com o índice da coluna clicada no cabeçalho
            System.out.println("Coluna clicada no cabeçalho: " + columnIndex);

            // Se quiser o nome da coluna, pode obter assim:
            String columnName = table.getColumnName(columnIndex);
            System.out.println("Nome da coluna clicada: " + columnName);
        }
        
        if (evt.getClickCount() > 1) {
            JTable obj = (JTable) evt.getComponent();
            int linha = obj.getSelectedRow();
            Integer codigo = (Integer) obj.getModel().getValueAt(linha, 0);
            PessoaDAO dao = new PessoaDAO();
            Pessoa pessoa = dao.encontraPorCodigo(codigo);
            this.carregaForm(pessoa);
        }
        
        
        
    }//GEN-LAST:event_tbListaPessoaMouseClicked

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        if (this.txtCodigo.isEnabled()) {
            JOptionPane.showMessageDialog(this, "O Registro precisa ser carregado da base para ser excluído", "Aviso", JOptionPane.WARNING_MESSAGE);
            this.txtCodigo.requestFocusInWindow();
        } else {
            int resp = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o registro", "Confirmação da Exclusão", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (resp == JOptionPane.YES_OPTION) {
                Pessoa pessoa = new Pessoa();
                pessoa.setCodigo(Integer.parseInt(this.txtCodigo.getText().trim()));
                PessoaDAO dao = new PessoaDAO();
                dao.remover(pessoa);
                this.atualizaTable();
                JOptionPane.showMessageDialog(this, "Registro removido", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                this.limpaForm();
            }
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void bttOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttOrdemActionPerformed
        // TODO add your handling code here:
        this.atualizaTable();
 
    }//GEN-LAST:event_bttOrdemActionPerformed

    private void mnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
}//GEN-LAST:event_mnSairActionPerformed

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JanPessoa().setVisible(true);
            }
        });
    }

    /**
     * Método usado para limpar/zerar todos os campos da tela e colocar o foco no campo Código
     */
    private void limpaForm() {
        this.txtCodigo.setText(null);
        this.txtNome.setText(null);
        this.rdMasculino.setSelected(true);
        this.txtData.setValue(null);
        this.cmbEstado.setSelectedIndex(0);
        this.txtCodigo.setEnabled(true);
        this.txtCodigo.requestFocusInWindow();
    }

    /**
     * Método private que valida as informações na tela para salvar ou atualizar
     * O método também é responsável por informar ao usuário se algo não esta correto.
     * @return verdadeiro se todos os campos estão de acordo! Falso em qualquer outra hipótese.
     */
    private boolean valida() {
        try {
            Integer.parseInt(this.txtCodigo.getText().trim());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Código inválido", "Falha", JOptionPane.WARNING_MESSAGE);
            this.txtCodigo.requestFocusInWindow();
            return false;
        }
        if (this.txtNome.getText() == null || this.txtNome.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Nome deve ser informado", "Falha", JOptionPane.WARNING_MESSAGE);
            this.txtNome.requestFocusInWindow();
            return false;
        }
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            sdf.parse(this.txtData.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Data inválida", "Falha", JOptionPane.WARNING_MESSAGE);
            this.txtData.requestFocusInWindow();
            return false;
        }
        if (this.cmbEstado.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(this, "Estado deve ser selecionado", "Falha", JOptionPane.WARNING_MESSAGE);
            this.cmbEstado.requestFocusInWindow();
            return false;
        }
        if (this.cmbCidade.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(this, "Cidade deve ser selecionada", "Falha", JOptionPane.WARNING_MESSAGE);
            this.cmbCidade.requestFocusInWindow();
            return false;
        }
        return true;
    }

    /**
     * Atualiza o conteúdo da tabela, baseado no DAO do Pessoa
     */
    private void atualizaTable() {
        DefaultTableModel dtm = (DefaultTableModel) this.tbListaPessoa.getModel();
        dtm.setRowCount(0);
        PessoaDAO dao = new PessoaDAO();
        Collection pessoas = dao.encontraTodos();
        List listaPessoas = new ArrayList(pessoas);
        if (this.bttCodigo.isSelected()) {
            Collections.sort(listaPessoas);
        } else if (this.bttNome.isSelected()) {
            Collections.sort(listaPessoas, new Comparator() {

                public int compare(Object o1, Object o2) {
                    Pessoa p1 = (Pessoa) o1;
                    Pessoa p2 = (Pessoa) o2;
                    return p1.getNome().compareTo(p2.getNome());
                }
            });
        } else if (this.bttCidade.isSelected()) {
            Collections.sort(listaPessoas, new Comparator() {

                public int compare(Object o1, Object o2) {
                    Pessoa p1 = (Pessoa) o1;
                    Pessoa p2 = (Pessoa) o2;
                    return p1.getCidade().getDescricao().compareTo(p2.getCidade().getDescricao());
                }
            });
        } else if (this.bttSexo.isSelected()){
            Collections.sort(listaPessoas, new Comparator() {
                
                public int compare(Object o1, Object o2) {
                    Pessoa p1 = (Pessoa) o1;
                    Pessoa p2 = (Pessoa) o2;
                    return Character.compare(p1.getSexo(), p2.getSexo());
                    }
            });
        } else if (this.bttDtNascimento.isSelected()){
            Collections.sort(listaPessoas, new Comparator(){
                
                public int compare(Object o1, Object o2){
                    Pessoa p1 = (Pessoa) o1;
                    Pessoa p2 = (Pessoa) o2;
                    return p1.getDataNascimento().compareTo(p2.getDataNascimento());
                }
                    
            });
        }
        
        
        
        
        for (Object objeto : listaPessoas) {
            Pessoa pessoa = (Pessoa) objeto;
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String dataformatada = sdf.format(pessoa.getDataNascimento());
            String sexo = pessoa.getSexo() == 'M' ? "Masculino" : "Feminino";
            String nomeCidade = pessoa.getCidade().getDescricao();
            String cpf = pessoa.getCpf();
            dtm.addRow(new Object[]{pessoa.getCodigo(), pessoa.getNome(), pessoa.getCpf(), dataformatada, nomeCidade, sexo});
        }
    }

    private void carregaForm(Pessoa pessoa) {
        if (pessoa != null) {
            this.txtCodigo.setText(Integer.toString(pessoa.getCodigo()));
            this.txtCodigo.setEnabled(false);
            this.txtNome.setText(pessoa.getNome());
            this.rdMasculino.setSelected(pessoa.getSexo() == 'M');
            this.rdFeminino.setSelected(pessoa.getSexo() == 'F');
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String dataformatada = sdf.format(pessoa.getDataNascimento());
            this.txtData.setText(dataformatada);
            this.cmbEstado.setSelectedItem(pessoa.getCidade().getEstado());
            this.cmbCidade.setSelectedItem(pessoa.getCidade());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSalvar;
    private javax.swing.ButtonGroup btgGrupoSexo;
    private javax.swing.ButtonGroup btgSelecao;
    private javax.swing.JToggleButton bttCidade;
    private javax.swing.JToggleButton bttCodigo;
    private javax.swing.JToggleButton bttDtNascimento;
    private javax.swing.JToggleButton bttNome;
    private javax.swing.JToggleButton bttSexo;
    private javax.swing.JComboBox cmbCidade;
    private javax.swing.JComboBox cmbEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenu mnLookAndFeel;
    private javax.swing.JMenuItem mnSair;
    private javax.swing.JMenuItem mnSobre;
    private javax.swing.JRadioButton rdFeminino;
    private javax.swing.JRadioButton rdMasculino;
    private javax.swing.JTable tbListaPessoa;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
