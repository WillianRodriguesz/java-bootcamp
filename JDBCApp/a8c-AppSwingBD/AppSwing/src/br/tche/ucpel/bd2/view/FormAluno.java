package br.tche.ucpel.bd2.view;

import br.tche.ucpel.bd2.bean.Aluno;
import br.tche.ucpel.bd2.dao.DepartamentoDAO;
import br.tche.ucpel.bd2.bean.Departamento;
import br.tche.ucpel.bd2.bean.Funcionario;
import br.tche.ucpel.bd2.dao.AlunoDAO;
import br.tche.ucpel.bd2.dao.FuncionarioDAO;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * Classe responsável pelo desenho da tela de cadastro do Departamento.
 * <br/>
 * São tratados eventos de lostFocus (perda do foco) no campo txtCodigo, os
 * eventos de acionamento de botões e o duplo click na tabela.
 *
 * @author mertins
 */
public class FormAluno extends javax.swing.JInternalFrame {

    private JFrame mdi;

    /**
     * Creates new form FormDepartamento
     *
     * @param mdi MDI principal.
     */
    public FormAluno(JFrame mdi) {
        this.mdi = mdi;
        initComponents();
        this.atualizaLista();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        btExcluir = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbAlunos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btLimpar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtIdade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        txtDtNascimento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btSalvar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Alunos");

        jLabel1.setText("Matricula");

        jLabel2.setText("Nome");

        txtMatricula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMatriculaFocusLost(evt);
            }
        });
        txtMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        tbAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Matricula", "Nome", "E-Mail", "Telefone", "Idade", "Data de Nascimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbAlunos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbAlunos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAlunosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbAlunos);

        jLabel3.setText("Email");

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        jLabel4.setText("Idade");

        jLabel5.setText("Telefone");

        txtDtNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDtNascimentoActionPerformed(evt);
            }
        });

        jLabel6.setText("Data Nascimento");

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAtualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btLimpar)
                        .addGap(18, 18, 18)
                        .addComponent(btExcluir))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefone))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtDtNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btLimpar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btExcluir)
                        .addComponent(btAtualizar))
                    .addComponent(btSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
    this.atualizaLista();
}//GEN-LAST:event_btAtualizarActionPerformed

private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed

    try {
        int matricula = this.transformaString(this.txtMatricula.getText());
        if (matricula > 0) {
            Aluno aluno = new Aluno(matricula);
            AlunoDAO alunoDAO = new AlunoDAO(MDISistema.getConexao());
            alunoDAO.delete(aluno);
            this.limpaTela();
            this.atualizaLista();
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao excluir Aluno:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(FormAluno.class.getName()).log(Level.WARNING, "Erro ao excluir Aluno", ex);
    }
    this.atualizaLista();
}//GEN-LAST:event_btExcluirActionPerformed

private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
    this.limpaTela();
}//GEN-LAST:event_btLimparActionPerformed

private void tbAlunosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAlunosMouseClicked
// TODO add your handling code here:
    if (evt.getClickCount() > 1) {
        JTable obj = (JTable) evt.getComponent();
        int linha = obj.getSelectedRow();
        Integer Matricula= (Integer) obj.getModel().getValueAt(linha, 0);
        Aluno al = new Aluno(Matricula);
        this.preencheTela(al);
    }
}//GEN-LAST:event_tbAlunosMouseClicked

private void txtMatriculaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatriculaFocusLost
// TODO add your handling code here:
    /* int cod = this.intCampoTelas(this.txtMatricula.getText());
    if (cod > 0) {
        Departamento dept = new Departamento(cod);
        boolean ret = this.preencheTela(dept);
        if (!ret) {
            JOptionPane.showMessageDialog(this.mdi, "Código do Departamento não existe no sistema", "Aviso", JOptionPane.WARNING_MESSAGE);
            this.txtMatricula.requestFocusInWindow();
        }
    }*/
}//GEN-LAST:event_txtMatriculaFocusLost

    private void txtMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatriculaActionPerformed

    private int transformaString(String valor) {
        int ret = -1;
        try {
            ret = Integer.parseInt(valor);
        } catch (NumberFormatException ex) {

        }
        return ret;
    }

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        try {
            // TODO add your handling code here:
            Aluno func = new Aluno();

            func.setNome(this.txtNome.getText());
            func.setMatricula(this.transformaString(this.txtMatricula.getText()));
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            func.setDtNascimento(sdf.parse(this.txtDtNascimento.getText()));
            func.setEmail(this.txtEmail.getText());
            func.setTelefone(this.txtTelefone.getText());
            func.setIdade(this.transformaString(this.txtIdade.getText()));

            AlunoDAO funcDao = new AlunoDAO(MDISistema.getConexao());
            if (func.getMatricula() != -1) {
                // A matrícula é um valor válido, salva no banco de dados
                funcDao.create(func);
            } else {
                System.out.println("matricula retornou -1");
            }

            JOptionPane.showMessageDialog(this.mdi, "Registro Salvo");
            this.limpaTela();
            this.atualizaLista();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this.mdi, "Data inválida");
            this.txtDtNascimento.requestFocus();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao gravar Aluno:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormAluno.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btSalvarActionPerformed

    private void txtDtNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDtNascimentoActionPerformed

    }//GEN-LAST:event_txtDtNascimentoActionPerformed

    /**
     * Método auxiliar para atualizar a JTable com os dados do Aluno
     */
    private void atualizaLista() {
        try {
            AlunoDAO alunoDAO = new AlunoDAO(MDISistema.getConexao());
            List<Aluno> lista = alunoDAO.listaTodos();
            DefaultTableModel dtm = (DefaultTableModel) this.tbAlunos.getModel();
            dtm.setRowCount(0);
            for (Aluno func : lista) {
                dtm.addRow(new Object[]{func.getMatricula(), func.getNome(), func.getEmail(), func.getTelefone(), func.getIdade(), func.getDtNascimento()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro :%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormAluno.class.getName()).log(Level.WARNING, "Erro", ex);
        }
    }

    /**
     * Método auxiliar para limpar os campos da tela.
     */
    private void limpaTela() {
        this.txtMatricula.setEnabled(true);
        this.txtMatricula.setText(null);
        this.txtNome.setText(null);
        this.txtEmail.setText(null);
        this.txtDtNascimento.setText(null);
        this.txtIdade.setText(null);
        this.txtTelefone.setText(null);
    }

    
    private boolean preencheTela(Aluno aluno) {
        boolean ret = false;
        try {
            AlunoDAO alunoDAO = new AlunoDAO(MDISistema.getConexao());
            aluno = alunoDAO.retrieve(aluno);
            if (aluno != null && aluno.getMatricula() > 0) {
                this.txtMatricula.setText(Integer.toString(aluno.getMatricula()));
                this.txtMatricula.setEnabled(false);
                this.txtNome.setText(aluno.getNome());
                this.txtEmail.setText(aluno.getEmail());
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                this.txtDtNascimento.setText(sdf.format(aluno.getDtNascimento()));
                this.txtTelefone.setText(aluno.getTelefone());
                this.txtIdade.setText(Integer.toString(aluno.getIdade()));
                ret = true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Não foi possível carregar Aluno: %s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormDepartamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ret;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tbAlunos;
    private javax.swing.JTextField txtDtNascimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIdade;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
